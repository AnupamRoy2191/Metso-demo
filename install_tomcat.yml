---
- name: install tomcat
  hosts: linux
  become: true
  vars_prompt:
      - name: tomcat_target_dir
        prompt: Enter the target directory where you want to install Tomcat
        private: no
      - name: u_item
        prompt: "Please enter user ownership who will manage Tomcat"
        private: no
      - name: g_item
        prompt: "Please enter group ownership who will manage Tomcat"
        private: no
  tasks:
    - name: update apt cache
      apt:
        update_cache: yes
      become: yes
      
    - name: ensure installation directory created for Tomcat
      file:
        path: "{{tomcat_target_dir}}"
        state: directory
        group: "{{ g_item }}"
        owner: "{{ u_item }}"

    - name: Download Apache Tomcat
      get_url:
        url: https://archive.apache.org/dist/tomcat/tomcat-10/v10.0.11/bin/apache-tomcat-10.0.11.tar.gz
        dest: /tmp/apache-tomcat-10.0.11.tar.gz
        mode: 0755
        group: "{{ g_item }}"
        owner: "{{ u_item }}"
      become: yes
      
    - name: Extract Apache Tomcat
      unarchive:
        src: /tmp/apache-tomcat-10.0.11.tar.gz
        dest: "{{ tomcat_target_dir }}"
        remote_src: yes
      become: yes
      
    - name: create tomcat service file
      become: yes
      copy:
        dest: /etc/systemd/system/tomcat.service
        content: |-
          [Unit]
          Description=Tomcat Service
          After=network.target

          [Service]
          Type=forking
          User=root
          Environment=JAVA_HOME=/opt/java/jdk-21
          ExecStart=/bin/bash {{tomcat_target_dir}}/apache-tomcat-10.0.11/bin/startup.sh
          ExecStop=/bin/bash {{tomcat_target_dir}}/apache-tomcat-10.0.11/bin/shutdown.sh
          Restart=on-abnormal

          [Install]
          WantedBy=multi-user.target

    - name: Enable tomcat service & start
      become: yes
      systemd:
        name: tomcat
        enabled: yes
        state: restarted
        daemon-reload: yes

    - name: change {{tomcat_target_dir}} permission to user {{ u_item }} & group {{ g_item }}
      ansible.builtin.file:
        path: "{{tomcat_target_dir}}"
        group: "{{ g_item }}"
        owner: "{{ u_item }}"
        recurse: yes

    - name: Sets default ACL for {{ u_item }} on {{tomcat_target_dir}}
      ansible.posix.acl:
        path: "{{tomcat_target_dir}}"
        entity: "{{ u_item }}"
        etype: user
        permissions: rwx
        default: true
        state: present
        recurse: yes